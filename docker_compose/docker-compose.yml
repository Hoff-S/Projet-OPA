version: "3.9"

services:
  database:
    container_name: my_mongo
    image: mongo:5.0
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand(\"ping\").ok' localhost:27017/test --quiet"]
      interval: 15s
      timeout: 30s
      retries: 3
      start_period: 20s
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=cryptobot
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PW}
    networks: 
      - compose-network
    ports:
      - '27017:27017'
    volumes:
      - data_mongodb:/data/db

  mongoexpress:
    container_name: mongo-express
    image: mongo-express:0.54
    restart: always
    depends_on:
      database:
        condition: service_healthy
    networks: 
      - compose-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=my_mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PW}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGODB_PW}
    ports:
      - '8081:8081'

  mariadb:
    image: mariadb:latest
    container_name: my_mariadb
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 45s
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_PW}
      MYSQL_DATABASE: ProjetOPA
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MARIADB_PW}
    ports:
      - "3306:3306"    
    networks: 
      - compose-network
    volumes:
      - data_mariadb:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
     - PMA_ARBITRARY=1
    restart: always
    ports:
     - 8080:80
    depends_on:
      mariadb:
        condition: service_healthy
    networks: 
      - compose-network 

  data_loader:
    image: cryptobot_loader:latest
    container_name: cryptobot_loader
    depends_on:
      database:
        condition: service_healthy 
      mariadb:
        condition: service_healthy
    environment:
      - MARIADB_PW=${MARIADB_PW}
      - MARIADB_HOST=mariadb
      - MONGODB_PW=${MONGODB_PW}
      - MONGODB_HOST=database  
    networks: 
      - compose-network 

  cryptobot_api:
    image: cryptobot_api:latest
    container_name: cryptobot_api
    environment:
      - MARIADB_PW=${MARIADB_PW}
      - MARIADB_HOST=mariadb
      - MONGODB_PW=${MONGODB_PW}
      - MONGODB_HOST=database 
    ports:
     - 8000:8000
    networks: 
      - compose-network  

  model_training:
    image: model_training:latest
    container_name: model_training
    depends_on:
      -  cryptobot_api
    environment:
      - API_URL=cryptobot_api
      - MLFLOW_TRACKING_URI=http://86.77.27.174:8080
      - MLFLOW_TRACKING_USERNAME=admin
      - MLFLOW_TRACKING_PASSWORD=${MLFLOW_PW}
    networks: 
      - compose-network

  cryptobot_api_test:
    image: cryptobot_api_test:latest
    container_name: cryptobot_api_test
    depends_on:
      -  cryptobot_api
    environment:
      - API_URL=cryptobot_api
    networks: 
      - compose-network 

networks:
  compose-network:
    name: my_network

volumes:
  data_mariadb:
  data_mongodb: